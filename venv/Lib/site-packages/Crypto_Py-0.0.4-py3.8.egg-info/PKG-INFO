Metadata-Version: 2.1
Name: Crypto-Py
Version: 0.0.4
Summary: A Python module to easily encrypt and decrypt files.
Home-page: https://github.com/Dextroz/Crypto-Py
Author: Dextroz
License: UNKNOWN
Description: # Crypto-Py üîê
        A Python module to easily encrypt and decrypt files.
        
        Crypto-Py is written in Python 3.7 üêç
        
        ## Example Usage
        
        Crypto-Py currently uses the Advanced Encryption Standard (AES) to encrypt files.
        
        By default, if the user doesn't supply a `KEY` to `CryptoPy`, a random key is generated and used for encryption.
        However, if a `KEY` is supplied, the assumption is made that this `KEY` is stored or known to the user by some other means.
        
        The `KEY` must be a byte string. An example is: `b'\xcd\xa0\x0f\x97%.\xbb\xf7\xe0\xd3\xa9\x86i\xec\xa0:'`.
        
        Below shows an example of Crypto-Py in action on a file within this project.
        
        ```python
        # Encrypt File.
        # encrypt_file ONLY returns a string PATH to the key file if a key isn't supplied during initialisation.
        key_file_path = CryptoPy().encrypt_file("../Pipfile.lock")
        print(key_file_path)
        # Open the file containing the key generated by Crypto-Py during encryption process.
        # Remember, this file is only produced if no `KEY` was supplied during initialisation of Crypto-Py.
        with open("../Pipfile.lock.key", "rb") as key_file:
            key = key_file.read()
        # Use the key to decrypt the previously encrypted file.
        # decrypt_file returns a string PATH to the decrypted file.
        decrypted_file_path = CryptoPy(key).decrypt_file("../Pipfile.lock.enc")
        print(decrypted_file_path)
        ```
        
        To use Crypto-Py in your own project import using `from Crypto_Py import CryptoPy`.
        
        ## Dependencies / Installation.
        
        ```
        [dev-packages]
        black = "*"
        twine = "*"
        
        [packages]
        pycryptodome = "*"
        ```
        
        Install dependencies using either:
        * `pipenv install`, `pip3 install -r requirements.txt`, `python setup.py install`, `pip3 install Crypto-Py`.
        
        ## Disclaimer
        
        * I am by no means a crypto expert, if you spot an issue with the module, go ahead and fork the repo, submit an issue or PR. üôÇ
        
        * I am **NOT** responsible for any loss or corruption of file data/encryption keys. By using this module, you accept the risk that issues or errors **could** occur resulting in loss of data/keys.
        
        ## Changelog
        
        * 0.0.4 - Fixed issue causing Error: "No module named Crypto".
        
        * 0.0.3 - Altered project name. Relevant changes.
        
        * 0.0.2 - Added PyPi support. Altered `encrypt_file` to overwrite the file supplied for encryption instead of creating a new file and deleting the old one (done in version 0.0.1).
        
        * 0.0.1 - Inital relase. Can encrypt or decrypt a user specified file using the Advanced Encryption Standard (AES).
        
        ## Authors -- Contributors
        
        * **Dextroz** - *Author* - [Dextroz](https://github.com/Dextroz)
        
        ## License
        
        This project is licensed under the MIT License - see the [LICENSE](LICENSE) for details.
        
Keywords: Python 3 Encrypt Decrypt Encryption Decryption AES file files Crypto-Py
Platform: UNKNOWN
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Description-Content-Type: text/markdown
